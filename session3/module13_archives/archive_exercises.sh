#!/bin/bash
# Archives and Compression

echo "=== Working with Archives ==="
echo ""
echo "Exercise 1: Creating tar archives"
echo "  tar -cf archive.tar files/         # Create archive"
echo "  tar -czf archive.tar.gz files/     # Create gzipped archive"
echo "  tar -cjf archive.tar.bz2 files/    # Create bzip2 archive"
echo "  tar -cJf archive.tar.xz files/     # Create xz archive"
echo ""
echo "  Flags explained:"
echo "    c - create"
echo "    x - extract"
echo "    t - list contents"
echo "    f - file (must be last before filename)"
echo "    z - gzip"
echo "    j - bzip2"
echo "    J - xz"
echo "    v - verbose"
echo ""
echo "Exercise 2: Extracting tar archives"
echo "  tar -xf archive.tar                # Extract tar"
echo "  tar -xzf archive.tar.gz            # Extract gzipped tar"
echo "  tar -xjf archive.tar.bz2           # Extract bzip2 tar"
echo "  tar -xJf archive.tar.xz            # Extract xz tar"
echo "  tar -xzf archive.tar.gz -C /path/  # Extract to specific directory"
echo ""
echo "Exercise 3: Listing archive contents"
echo "  tar -tf archive.tar                # List files"
echo "  tar -tzf archive.tar.gz            # List gzipped archive"
echo "  tar -tvf archive.tar               # Detailed listing"
echo ""
echo "Exercise 4: Common tar patterns"
echo "  # Backup with timestamp"
echo "  tar -czf backup_\$(date +%Y%m%d).tar.gz /path/to/data"
echo ""
echo "  # Archive and exclude files"
echo "  tar -czf archive.tar.gz --exclude='*.log' directory/"
echo ""
echo "  # Extract single file"
echo "  tar -xzf archive.tar.gz path/to/file.txt"
echo ""
echo "  # Create archive with progress"
echo "  tar -czf - directory/ | pv > archive.tar.gz"
echo ""
echo "Exercise 5: gzip compression"
echo "  gzip file.txt                      # Compress (creates file.txt.gz)"
echo "  gzip -k file.txt                   # Keep original"
echo "  gzip -9 file.txt                   # Maximum compression"
echo "  gunzip file.txt.gz                 # Decompress"
echo "  gzip -d file.txt.gz                # Decompress (alternative)"
echo ""
echo "Exercise 6: Working with zip files"
echo "  zip archive.zip file1 file2        # Create zip"
echo "  zip -r archive.zip directory/      # Recursive zip"
echo "  unzip archive.zip                  # Extract"
echo "  unzip -l archive.zip               # List contents"
echo "  unzip archive.zip -d /path/        # Extract to directory"
echo "  unzip -q archive.zip               # Quiet mode"
echo ""
echo "Exercise 7: Viewing compressed files"
echo "  zcat file.txt.gz                   # View gzipped file"
echo "  zless file.txt.gz                  # Page through gzipped file"
echo "  zgrep 'pattern' file.txt.gz        # Search in gzipped file"
echo ""
echo "Exercise 8: Real-world examples"
echo "  # Backup home directory"
echo "  tar -czf ~/backup_home_\$(date +%Y%m%d).tar.gz ~/ --exclude='*.cache'"
echo ""
echo "  # Archive logs older than 7 days"
echo "  find /var/log -name '*.log' -mtime +7 | tar -czf old_logs.tar.gz -T -"
echo ""
echo "  # Extract and pipe to grep"
echo "  tar -xzf logs.tar.gz -O | grep 'ERROR'"
echo ""
echo "  # Create split archives (for large files)"
echo "  tar -czf - large_directory/ | split -b 100M - archive.tar.gz.part"
echo ""
echo "  # Combine and extract split archives"
echo "  cat archive.tar.gz.part* | tar -xzf -"
echo ""
echo "Exercise 9: Comparing compression"
echo "  # Compare file sizes"
echo "  ls -lh file.txt"
echo "  gzip -k file.txt && ls -lh file.txt.gz"
echo "  bzip2 -k file.txt && ls -lh file.txt.bz2"
echo "  xz -k file.txt && ls -lh file.txt.xz"
echo ""
echo "  Speed vs Size:"
echo "    gzip  - Fast, moderate compression"
echo "    bzip2 - Slower, better compression"
echo "    xz    - Slowest, best compression"
echo ""
echo "Exercise 10: Archive entire project"
echo "  # Exclude version control and dependencies"
echo "  tar -czf project.tar.gz \\"
echo "    --exclude='.git' \\"
echo "    --exclude='node_modules' \\"
echo "    --exclude='__pycache__' \\"
echo "    --exclude='*.pyc' \\"
echo "    project_directory/"
echo ""

