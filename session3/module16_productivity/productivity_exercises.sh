#!/bin/bash
# Terminal Productivity Tips

echo "=== Terminal Productivity ==="
echo ""
echo "Exercise 1: Command history"
echo "  history                # Show command history"
echo "  history | tail -20     # Last 20 commands"
echo "  !n                     # Run command number n"
echo "  !!                     # Run last command"
echo "  !-2                    # Run 2nd to last command"
echo "  !grep                  # Run last command starting with 'grep'"
echo "  !?search               # Run last command containing 'search'"
echo ""
echo "Exercise 2: History expansion"
echo "  !$                     # Last argument of previous command"
echo "  !^                     # First argument of previous command"
echo "  !*                     # All arguments of previous command"
echo ""
echo "  # Example:"
echo "  ls /var/log/syslog"
echo "  vim !$                 # Opens /var/log/syslog"
echo ""
echo "Exercise 3: Reverse search"
echo "  Ctrl+R                 # Start reverse search"
echo "  # Type to search, Ctrl+R again for next match"
echo "  # Enter to execute, Ctrl+G to cancel"
echo ""
echo "Exercise 4: Aliases"
echo "  alias                  # List all aliases"
echo "  alias ll='ls -la'      # Create alias"
echo "  alias gs='git status'"
echo "  alias ..='cd ..'"
echo "  alias ...='cd ../..'"
echo "  unalias ll             # Remove alias"
echo ""
echo "  # Make permanent: add to ~/.bashrc"
echo "  echo \"alias ll='ls -la'\" >> ~/.bashrc"
echo "  source ~/.bashrc"
echo ""
echo "Exercise 5: Useful aliases to add"
echo "  alias ll='ls -lah'"
echo "  alias la='ls -A'"
echo "  alias l='ls -CF'"
echo "  alias grep='grep --color=auto'"
echo "  alias df='df -h'"
echo "  alias du='du -h'"
echo "  alias free='free -h'"
echo "  alias ps='ps auxf'"
echo "  alias mkdir='mkdir -pv'"
echo "  alias wget='wget -c'"
echo "  alias ..='cd ..'"
echo "  alias ...='cd ../..'"
echo "  alias ....='cd ../../..'"
echo ""
echo "Exercise 6: Keyboard shortcuts"
echo "  Ctrl+A                 # Move to beginning of line"
echo "  Ctrl+E                 # Move to end of line"
echo "  Ctrl+U                 # Delete from cursor to beginning"
echo "  Ctrl+K                 # Delete from cursor to end"
echo "  Ctrl+W                 # Delete word before cursor"
echo "  Ctrl+L                 # Clear screen (same as 'clear')"
echo "  Ctrl+C                 # Cancel current command"
echo "  Ctrl+D                 # Exit shell (or EOF)"
echo "  Ctrl+Z                 # Suspend current process"
echo "  Ctrl+R                 # Reverse search"
echo "  Tab                    # Auto-complete"
echo "  Tab Tab                # Show all completions"
echo ""
echo "Exercise 7: Navigation shortcuts"
echo "  Alt+F                  # Move forward one word"
echo "  Alt+B                  # Move backward one word"
echo "  Alt+D                  # Delete word after cursor"
echo "  Alt+Backspace          # Delete word before cursor"
echo "  Ctrl+XX                # Toggle between current and start of line"
echo ""
echo "Exercise 8: Job control"
echo "  Ctrl+Z                 # Suspend current job"
echo "  jobs                   # List jobs"
echo "  fg                     # Bring to foreground"
echo "  fg %1                  # Bring job 1 to foreground"
echo "  bg                     # Resume in background"
echo "  bg %1                  # Resume job 1 in background"
echo "  command &              # Start in background"
echo ""
echo "Exercise 9: Customizing PS1 (prompt)"
echo "  # Simple prompt"
echo "  export PS1='\\u@\\h:\\w\\$ '"
echo ""
echo "  # Colorful prompt"
echo "  export PS1='\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '"
echo ""
echo "  # Add git branch (requires git)"
echo "  export PS1='\\u@\\h:\\w\\\$(git branch 2>/dev/null | grep \"^*\" | cut -d\" \" -f2)\\$ '"
echo ""
echo "  Variables:"
echo "    \\u - username"
echo "    \\h - hostname"
echo "    \\w - current directory"
echo "    \\W - basename of current directory"
echo "    \\$ - $ for user, # for root"
echo "    \\t - time"
echo "    \\d - date"
echo ""
echo "Exercise 10: Bash configuration files"
echo "  ~/.bashrc              # Interactive non-login shells"
echo "  ~/.bash_profile        # Login shells"
echo "  ~/.bash_aliases        # Aliases (sourced by .bashrc)"
echo "  ~/.bash_logout         # Run on logout"
echo ""
echo "  # Reload configuration"
echo "  source ~/.bashrc"
echo "  . ~/.bashrc            # Same as source"
echo ""
echo "Exercise 11: Useful functions"
echo "  # Add to ~/.bashrc:"
echo ""
echo "  # Make directory and cd into it"
echo "  mkcd() {"
echo "    mkdir -p \"\$1\" && cd \"\$1\""
echo "  }"
echo ""
echo "  # Extract any archive"
echo "  extract() {"
echo "    if [ -f \$1 ]; then"
echo "      case \$1 in"
echo "        *.tar.gz)  tar xzf \$1   ;;"
echo "        *.tar.bz2) tar xjf \$1   ;;"
echo "        *.zip)     unzip \$1     ;;"
echo "        *.gz)      gunzip \$1    ;;"
echo "        *)         echo 'Unknown format' ;;"
echo "      esac"
echo "    fi"
echo "  }"
echo ""
echo "  # Find process by name"
echo "  psgrep() {"
echo "    ps aux | grep -v grep | grep -i -e VSZ -e \"\$1\""
echo "  }"
echo ""
echo "Exercise 12: Command substitution"
echo "  echo \"Today is \$(date)\""
echo "  echo \"Current dir: \$(pwd)\""
echo "  files=\$(ls | wc -l)"
echo "  echo \"File count: \$files\""
echo ""
echo "Exercise 13: Brace expansion"
echo "  echo {1..10}           # 1 2 3 4 5 6 7 8 9 10"
echo "  echo {a..z}            # a b c ... z"
echo "  echo file{1..5}.txt    # file1.txt file2.txt ..."
echo "  mkdir -p project/{src,bin,doc,test}"
echo "  touch file{1..3}.{txt,md,py}"
echo ""
echo "Exercise 14: Quick tips"
echo "  # Run previous command with sudo"
echo "  sudo !!"
echo ""
echo "  # Replace text in previous command"
echo "  ^old^new               # Replace first occurrence"
echo ""
echo "  # Create backup before editing"
echo "  cp file.txt{,.bak}     # Creates file.txt.bak"
echo ""
echo "  # Quick file comparison"
echo "  diff <(ls dir1) <(ls dir2)"
echo ""
echo "  # Monitor command output"
echo "  watch -n 1 'df -h'"
echo ""
echo "  # Repeat command until it succeeds"
echo "  while ! ping -c 1 google.com; do sleep 1; done"
echo ""

