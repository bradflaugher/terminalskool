#!/bin/bash
# Networking Commands

echo "=== Networking Basics ==="
echo ""
echo "Exercise 1: Testing connectivity with ping"
echo "  ping google.com                    # Ping until stopped (Ctrl+C)"
echo "  ping -c 4 google.com               # Ping 4 times"
echo "  ping -c 1 8.8.8.8                  # Ping Google DNS"
echo "  ping -i 2 google.com               # Ping every 2 seconds"
echo ""
echo "Exercise 2: Making HTTP requests with curl"
echo "  curl http://example.com            # GET request"
echo "  curl -I http://example.com         # Headers only"
echo "  curl -o page.html http://example.com  # Save to file"
echo "  curl -O http://example.com/file.zip   # Save with original name"
echo "  curl -L http://bit.ly/short        # Follow redirects"
echo ""
echo "Exercise 3: curl with APIs"
echo "  curl https://api.github.com/users/octocat"
echo "  curl -H 'Accept: application/json' https://api.example.com"
echo "  curl -X POST -d 'key=value' https://api.example.com"
echo "  curl -s https://api.github.com/users/octocat | grep 'login'"
echo ""
echo "Exercise 4: Downloading files with wget"
echo "  wget http://example.com/file.zip"
echo "  wget -O custom_name.zip http://example.com/file.zip"
echo "  wget -c http://example.com/large.iso    # Resume download"
echo "  wget -b http://example.com/file.zip     # Background download"
echo "  wget -r -l 2 http://example.com         # Recursive (2 levels)"
echo ""
echo "Exercise 5: SSH - Secure Shell"
echo "  ssh user@hostname                  # Connect to remote server"
echo "  ssh -p 2222 user@hostname          # Custom port"
echo "  ssh user@hostname 'ls -la'         # Run command remotely"
echo "  ssh -i ~/.ssh/key.pem user@host    # Use specific key"
echo ""
echo "Exercise 6: SCP - Secure Copy"
echo "  scp file.txt user@host:/path/      # Copy to remote"
echo "  scp user@host:/path/file.txt .     # Copy from remote"
echo "  scp -r directory/ user@host:/path/ # Copy directory"
echo "  scp -P 2222 file.txt user@host:~   # Custom port"
echo ""
echo "Exercise 7: Network statistics with ss (or netstat)"
echo "  ss -tuln                           # Show listening ports"
echo "  ss -tun                            # Show established connections"
echo "  ss -tulnp                          # Show with process info"
echo "  netstat -tuln                      # Alternative (older)"
echo ""
echo "Exercise 8: Check open ports"
echo "  ss -tuln | grep :80                # Check if port 80 is open"
echo "  ss -tuln | grep :22                # Check SSH port"
echo "  lsof -i :8000                      # What's using port 8000?"
echo ""
echo "Exercise 9: DNS lookups"
echo "  nslookup google.com                # Basic DNS lookup"
echo "  nslookup google.com 8.8.8.8        # Use specific DNS server"
echo "  dig google.com                     # Detailed DNS info"
echo "  dig +short google.com              # Just the IP"
echo "  host google.com                    # Simple lookup"
echo ""
echo "Exercise 10: Network interfaces"
echo "  ip addr                            # Show all interfaces"
echo "  ip addr show eth0                  # Show specific interface"
echo "  ifconfig                           # Alternative (older)"
echo "  ip route                           # Show routing table"
echo ""
echo "Exercise 11: Testing ports with nc (netcat)"
echo "  nc -zv google.com 80               # Test if port is open"
echo "  nc -zv localhost 22                # Test SSH locally"
echo "  nc -l 8000                         # Listen on port 8000"
echo "  echo 'test' | nc localhost 8000    # Send data to port"
echo ""
echo "Exercise 12: Checking your public IP"
echo "  curl ifconfig.me"
echo "  curl icanhazip.com"
echo "  curl ipinfo.io/ip"
echo "  wget -qO- ifconfig.me"
echo ""
echo "Exercise 13: Real-world examples"
echo "  # Check if website is up"
echo "  curl -I -s http://example.com | head -n 1"
echo ""
echo "  # Download and extract"
echo "  wget http://example.com/file.tar.gz && tar -xzf file.tar.gz"
echo ""
echo "  # Test API endpoint"
echo "  curl -s https://api.github.com/users/octocat | grep -o '\"login\":\"[^\"]*\"'"
echo ""
echo "  # Monitor website response time"
echo "  while true; do curl -o /dev/null -s -w '%{time_total}\\n' http://example.com; sleep 5; done"
echo ""
echo "  # Copy file to multiple servers"
echo "  for server in server1 server2 server3; do"
echo "    scp file.txt user@\$server:/tmp/"
echo "  done"
echo ""

