#!/bin/bash
# Process Management Exercises

echo "=== Process Management ==="
echo ""
echo "Exercise 1: Viewing processes"
echo "  ps                     # Your processes"
echo "  ps aux                 # All processes"
echo "  ps aux | grep bash     # Find bash processes"
echo "  ps -ef                 # Full format listing"
echo "  ps -u \$USER           # Your user's processes"
echo ""
echo "Exercise 2: Interactive process viewer"
echo "  top                    # Press 'q' to quit"
echo "  top -u \$USER          # Show only your processes"
echo "  htop                   # Better version (if installed)"
echo ""
echo "  Top keyboard shortcuts:"
echo "    q - quit"
echo "    k - kill a process"
echo "    M - sort by memory"
echo "    P - sort by CPU"
echo "    1 - show individual CPUs"
echo ""
echo "Exercise 3: Background jobs with &"
echo "  sleep 30 &             # Run in background"
echo "  sleep 60 &"
echo "  jobs                   # List background jobs"
echo "  jobs -l                # List with PIDs"
echo ""
echo "Exercise 4: Foreground and background control"
echo "  sleep 100 &            # Start in background"
echo "  jobs                   # See job number"
echo "  fg %1                  # Bring job 1 to foreground"
echo "  # Press Ctrl+Z to suspend"
echo "  bg %1                  # Resume in background"
echo ""
echo "Exercise 5: Ctrl+Z and job control"
echo "  # Start a long process:"
echo "  sleep 300"
echo "  # Press Ctrl+Z to suspend it"
echo "  jobs                   # See suspended job"
echo "  bg                     # Continue in background"
echo "  fg                     # Bring back to foreground"
echo ""
echo "Exercise 6: Killing processes"
echo "  kill PID               # Graceful termination (SIGTERM)"
echo "  kill -9 PID            # Force kill (SIGKILL)"
echo "  kill %1                # Kill job 1"
echo "  killall sleep          # Kill all sleep processes"
echo "  pkill -f 'python.*script.py'  # Kill by pattern"
echo ""
echo "Exercise 7: Finding process IDs"
echo "  pgrep sleep            # Find PIDs of sleep processes"
echo "  pgrep -u \$USER bash   # Find your bash processes"
echo "  pidof bash             # Get PID of bash"
echo "  ps aux | grep python | awk '{print \$2}'  # Extract PIDs"
echo ""
echo "Exercise 8: Running processes that survive logout"
echo "  nohup long_script.sh &         # Immune to hangup signal"
echo "  nohup python3 script.py > output.log 2>&1 &"
echo "  disown %1                      # Detach job from shell"
echo ""
echo "Exercise 9: Process priority"
echo "  nice -n 10 command     # Run with lower priority"
echo "  nice -n -10 command    # Run with higher priority (needs sudo)"
echo "  renice -n 5 -p PID     # Change priority of running process"
echo ""
echo "Exercise 10: Monitoring specific processes"
echo "  watch -n 1 'ps aux | grep python'  # Update every second"
echo "  watch -n 2 'ls -lh /tmp'           # Watch directory changes"
echo ""
echo "Exercise 11: Process tree"
echo "  pstree                 # Show process hierarchy"
echo "  pstree -p              # Include PIDs"
echo "  pstree \$USER          # Show your process tree"
echo ""
echo "Exercise 12: Real-world examples"
echo "  # Start a web server in background"
echo "  python3 -m http.server 8000 &"
echo "  jobs"
echo "  # Kill it when done"
echo "  kill %1"
echo ""
echo "  # Run multiple background tasks"
echo "  for i in {1..5}; do"
echo "    sleep \$((i * 10)) &"
echo "  done"
echo "  jobs"
echo "  # Kill all"
echo "  killall sleep"
echo ""
echo "Exercise 13: Combining with pipes"
echo "  ps aux | grep python | awk '{print \$2}' | xargs kill"
echo "  pgrep sleep | xargs kill"
echo ""

