#!/bin/bash
# Text Processing and Piping Exercises

echo "=== Text Processing with Pipes ==="
echo ""
echo "Exercise 1: Basic grep (searching)"
echo "  grep 'Developer' sample_data.txt"
echo "  grep -i 'alice' sample_data.txt          # Case insensitive"
echo "  grep -v 'Developer' sample_data.txt      # Invert match (exclude)"
echo "  grep -c 'Engineer' sample_data.txt       # Count matches"
echo "  grep -n 'Manager' sample_data.txt        # Show line numbers"
echo ""
echo "Exercise 2: Piping with grep"
echo "  cat sample_data.txt | grep 'Developer'"
echo "  ls -la | grep '.txt'"
echo "  ps aux | grep 'bash'"
echo "  history | grep 'git'"
echo ""
echo "Exercise 3: Using cut (extract columns)"
echo "  cut -d',' -f1 sample_data.txt            # First column (names)"
echo "  cut -d',' -f2 sample_data.txt            # Second column (ages)"
echo "  cut -d',' -f3 sample_data.txt            # Third column (jobs)"
echo "  cut -d',' -f1,3 sample_data.txt          # Multiple columns"
echo ""
echo "Exercise 4: Combining cut and grep"
echo "  grep 'Developer' sample_data.txt | cut -d',' -f1"
echo "  grep 'Engineer' sample_data.txt | cut -d',' -f1,4"
echo "  cat sample_data.txt | cut -d',' -f3 | grep 'Developer'"
echo ""
echo "Exercise 5: Using sort"
echo "  cut -d',' -f1 sample_data.txt | sort"
echo "  cut -d',' -f2 sample_data.txt | sort -n   # Numeric sort"
echo "  sort sample_data.txt                      # Sort entire file"
echo "  sort -r sample_data.txt                   # Reverse sort"
echo ""
echo "Exercise 6: Using uniq (remove duplicates)"
echo "  cut -d',' -f3 sample_data.txt | sort | uniq"
echo "  cut -d',' -f3 sample_data.txt | sort | uniq -c  # Count occurrences"
echo "  sort sample_data.txt | uniq                      # Remove duplicate lines"
echo ""
echo "Exercise 7: Using wc (word count)"
echo "  wc sample_data.txt                        # Lines, words, characters"
echo "  wc -l sample_data.txt                     # Count lines"
echo "  wc -w sample_data.txt                     # Count words"
echo "  wc -c sample_data.txt                     # Count characters"
echo ""
echo "Exercise 8: Complex pipes"
echo "  cat sample_data.txt | grep 'Developer' | cut -d',' -f1 | sort"
echo "  cat sample_data.txt | cut -d',' -f3 | sort | uniq -c | sort -rn"
echo "  grep 'Engineer' sample_data.txt | wc -l"
echo "  ls -la | grep '^d' | wc -l                # Count directories"
echo ""
echo "Exercise 9: Using head and tail"
echo "  head -n 3 sample_data.txt                 # First 3 lines"
echo "  tail -n 3 sample_data.txt                 # Last 3 lines"
echo "  cat sample_data.txt | head -n 5 | tail -n 1  # Get 5th line"
echo ""
echo "Exercise 10: Using sed (stream editor)"
echo "  sed 's/Developer/Programmer/' sample_data.txt        # Replace first occurrence"
echo "  sed 's/Developer/Programmer/g' sample_data.txt       # Replace all occurrences"
echo "  sed 's/,/ | /g' sample_data.txt                      # Replace commas with pipes"
echo "  sed -n '3,5p' sample_data.txt                        # Print lines 3-5"
echo "  sed '/Developer/d' sample_data.txt                   # Delete lines with Developer"
echo ""
echo "Exercise 11: Using awk (pattern scanning)"
echo "  awk -F',' '{print \$1}' sample_data.txt              # Print first field"
echo "  awk -F',' '{print \$1, \$3}' sample_data.txt         # Print name and job"
echo "  awk -F',' '\$2 > 30 {print \$1}' sample_data.txt     # Names of people over 30"
echo "  awk -F',' '{sum+=\$2} END {print sum/NR}' sample_data.txt  # Average age"
echo ""
echo "Exercise 12: Real-world pipe chains"
echo "  # Find most common job title"
echo "  cut -d',' -f3 sample_data.txt | sort | uniq -c | sort -rn | head -n 1"
echo ""
echo "  # List all unique cities"
echo "  cut -d',' -f4 sample_data.txt | sort | uniq"
echo ""
echo "  # Count developers"
echo "  grep -c 'Developer' sample_data.txt"
echo ""
echo "  # Find all engineers and show just names and cities"
echo "  grep 'Engineer' sample_data.txt | cut -d',' -f1,4"
echo ""
echo "Exercise 13: Piping with other commands"
echo "  ps aux | grep 'python' | awk '{print \$2}'           # Get PIDs of python processes"
echo "  df -h | grep '/dev/' | awk '{print \$5}' | sed 's/%//'  # Disk usage percentages"
echo "  ls -la | awk '{print \$9}' | grep -v '^$'            # List just filenames"
echo ""

