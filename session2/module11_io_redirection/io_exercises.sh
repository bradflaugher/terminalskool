#!/bin/bash
# Input/Output Redirection Exercises

echo "=== I/O Redirection ==="
echo ""
echo "Exercise 1: Understanding streams"
echo "  stdin  (0) - Standard input  (keyboard)"
echo "  stdout (1) - Standard output (screen)"
echo "  stderr (2) - Standard error  (screen)"
echo ""
echo "Exercise 2: Output redirection with >"
echo "  echo 'Hello' > file.txt              # Create/overwrite file"
echo "  ls -la > listing.txt                 # Save directory listing"
echo "  date > timestamp.txt                 # Save current date"
echo "  # Warning: > overwrites existing files!"
echo ""
echo "Exercise 3: Append with >>"
echo "  echo 'Line 1' > file.txt             # Create file"
echo "  echo 'Line 2' >> file.txt            # Append to file"
echo "  echo 'Line 3' >> file.txt            # Append again"
echo "  cat file.txt                         # View result"
echo ""
echo "Exercise 4: Redirecting errors with 2>"
echo "  ls /nonexistent 2> error.log         # Save error to file"
echo "  ls /nonexistent 2> /dev/null         # Discard errors"
echo "  find / -name 'test' 2> /dev/null     # Hide permission errors"
echo ""
echo "Exercise 5: Redirect both stdout and stderr"
echo "  command > output.txt 2>&1            # Both to same file (old way)"
echo "  command &> output.txt                # Both to same file (new way)"
echo "  command > output.txt 2> error.txt    # Separate files"
echo ""
echo "Exercise 6: Input redirection with <"
echo "  wc -l < file.txt                     # Count lines from file"
echo "  sort < unsorted.txt > sorted.txt     # Sort file contents"
echo "  while read line; do echo \$line; done < file.txt"
echo ""
echo "Exercise 7: Here documents (<<)"
echo "  cat << EOF > multiline.txt"
echo "  Line 1"
echo "  Line 2"
echo "  Line 3"
echo "  EOF"
echo ""
echo "  # Useful for creating config files:"
echo "  cat << 'CONFIG' > app.conf"
echo "  host=localhost"
echo "  port=8080"
echo "  CONFIG"
echo ""
echo "Exercise 8: Here strings (<<<)"
echo "  wc -w <<< 'This is a test string'"
echo "  grep 'test' <<< 'this is a test'"
echo ""
echo "Exercise 9: Pipes (|) - connect stdout to stdin"
echo "  ls -la | grep '.txt'                 # Filter listing"
echo "  cat file.txt | sort | uniq           # Process file"
echo "  ps aux | grep python | wc -l         # Count processes"
echo ""
echo "Exercise 10: tee - write to file AND stdout"
echo "  ls -la | tee listing.txt             # Save and display"
echo "  echo 'test' | tee file1.txt file2.txt  # Write to multiple files"
echo "  command | tee -a log.txt             # Append mode"
echo ""
echo "Exercise 11: Combining redirections"
echo "  # Save output, discard errors"
echo "  command > output.txt 2> /dev/null"
echo ""
echo "  # Save both, but separately"
echo "  command > output.txt 2> error.txt"
echo ""
echo "  # Append both to same file"
echo "  command >> log.txt 2>&1"
echo ""
echo "Exercise 12: Real-world examples"
echo "  # Create a log file with timestamp"
echo "  echo \"\$(date): Starting backup\" >> backup.log"
echo "  tar -czf backup.tar.gz /data >> backup.log 2>&1"
echo ""
echo "  # Save command output for later analysis"
echo "  ps aux > processes_\$(date +%Y%m%d).txt"
echo ""
echo "  # Filter and save"
echo "  grep -r 'ERROR' /var/log/*.log 2>/dev/null > errors.txt"
echo ""
echo "Exercise 13: File descriptors"
echo "  # Open file descriptor 3 for reading"
echo "  exec 3< file.txt"
echo "  read -u 3 line"
echo "  echo \$line"
echo "  exec 3<&-  # Close descriptor"
echo ""
echo "Exercise 14: Practical piping chains"
echo "  # Find largest files"
echo "  du -ah /home | sort -rh | head -n 10"
echo ""
echo "  # Count unique IPs in log"
echo "  cat access.log | awk '{print \$1}' | sort | uniq -c | sort -rn"
echo ""
echo "  # Monitor log file in real-time"
echo "  tail -f /var/log/syslog | grep 'error'"
echo ""

